version: '3.8'

services:
  arbitrage-bot:
    build: 
      context: ..
      dockerfile: docker/Dockerfile
    container_name: solana-arbitrage-bot
    restart: unless-stopped
    environment:
      - SOLANA_PRIVATE_KEY=${SOLANA_PRIVATE_KEY}
      - RPC_ENDPOINT=${RPC_ENDPOINT:-https://api.mainnet-beta.solana.com}
      - PYTHONUNBUFFERED=1
    volumes:
      - ../data:/app/data
      - ../logs:/app/logs
      - ../config:/app/config:ro
    ports:
      - "8000:8000"
    networks:
      - arbitrage-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  
  prometheus:
    image: prom/prometheus:latest
    container_name: arbitrage-prometheus
    restart: unless-stopped
    volumes:
      - ../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - arbitrage-net
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
  
  grafana:
    image: grafana/grafana:latest
    container_name: arbitrage-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ../monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ../monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "3000:3000"
    networks:
      - arbitrage-net
    depends_on:
      - prometheus

networks:
  arbitrage-net:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data: